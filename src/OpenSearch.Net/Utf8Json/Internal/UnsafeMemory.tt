<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".cs" #>
<#
	var Max = 31;
#>
#region Utf8Json License https://github.com/neuecc/Utf8Json/blob/master/LICENSE
/* SPDX-License-Identifier: Apache-2.0
*
* The OpenSearch Contributors require contributions made to
* this file be licensed under the Apache-2.0 license or a
* compatible open source license.
*
* Modifications Copyright OpenSearch Contributors. See
* GitHub history for details.
*
*  Licensed to Elasticsearch B.V. under one or more contributor
*  license agreements. See the NOTICE file distributed with
*  this work for additional information regarding copyright
*  ownership. Elasticsearch B.V. licenses this file to you under
*  the Apache License, Version 2.0 (the "License"); you may
*  not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
* 	http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing,
*  software distributed under the License is distributed on an
*  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
*  KIND, either express or implied.  See the License for the
*  specific language governing permissions and limitations
*  under the License.
*/

// MIT License
// 
// Copyright (c) 2017 Yoshifumi Kawai
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
#endregion

using System.Runtime.CompilerServices;

namespace OpenSearch.Net.Utf8Json.Internal
{
	internal static partial class UnsafeMemory32
	{
<# for(var i = 4; i <= Max; i++) { #>
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static unsafe void WriteRaw<#= i #>(ref JsonWriter writer, byte[] src)
		{
			BinaryUtil.EnsureCapacity(ref writer.Buffer, writer.Offset, src.Length);

			fixed (byte* pSrc = &src[0])
			fixed (byte* pDst = &writer.Buffer[writer.Offset])
			{
<# for(var j = 0; j < (i / 4); j++) { #>
				*(int*)(pDst + <#= (4 * j) #>) = *(int*)(pSrc + <#= (4 * j) #>);
<# } #>
<# if(i % 4 != 0) { #>
				*(int*)(pDst + <#= i - 4 #>) = *(int*)(pSrc + <#= (i - 4) #>);
<# } #>
			}

			writer.Offset += src.Length;
		}

<# } #>
	}

	internal static partial class UnsafeMemory64
	{
<# for(var i = 8; i <= Max; i++) { #>
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static unsafe void WriteRaw<#= i #>(ref JsonWriter writer, byte[] src)
		{
			BinaryUtil.EnsureCapacity(ref writer.Buffer, writer.Offset, src.Length);

			fixed (byte* pSrc = &src[0])
			fixed (byte* pDst = &writer.Buffer[writer.Offset])
			{
<# for(var j = 0; j < (i / 8); j++) { #>
				*(long*)(pDst + <#= (8 * j) #>) = *(long*)(pSrc + <#= (8 * j) #>);
<# } #>
<# if(i % 8 != 0) { #>
				*(long*)(pDst + <#= i - 8 #>) = *(long*)(pSrc + <#= (i - 8) #>);
<# } #>
			}

			writer.Offset += src.Length;
		}

<# } #>
	}
}
